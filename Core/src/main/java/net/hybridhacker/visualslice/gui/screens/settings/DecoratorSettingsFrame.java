package net.hybridhacker.visualslice.gui.screens.settings;

import java.awt.Color;
import java.io.File;
import java.net.URI;
import javax.imageio.ImageIO;
import javax.swing.JButton;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.filechooser.FileNameExtensionFilter;
import net.hybridhacker.visualslice.visualizer.DecoratorRegistry;
import net.hybridhacker.visualslice.visualizer.settings.Setting;

/**
 *
 * @author Flaflo
 */
public class DecoratorSettingsFrame extends JFrame {

    /**
     * Creates new form SettingsFrame
     */
    public DecoratorSettingsFrame(final JFrame parent, final String decorator) {
        super(decorator);

        initComponents();

        final Setting<?>[] settings = DecoratorRegistry.getInstance().getSettingsOfDecorator(decorator);

        for (final Setting<?> setting : settings) {
            this.add(new JLabel(setting.getName()));

            final JButton button = new JButton("Config");

            if (setting.getValue() instanceof Color) {
                button.addActionListener((e)
                        -> setting.setValue(JColorChooser.showDialog(this, "Choose a Color", (Color) setting.getValue()))
                );

                this.add(button);
            } else if (setting.getValue() instanceof URI) {
                button.addActionListener((e) -> {
                    final JFileChooser chooser = new JFileChooser();
                    chooser.setFileFilter(new FileNameExtensionFilter("Image files", ImageIO.getReaderFileSuffixes()));

                    if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                        final String destination = chooser.getSelectedFile().getAbsolutePath();

                        setting.setValue(new File(destination).toURI());
                    }
                });
                this.add(button);
            }
        }

        this.setLocationRelativeTo(parent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setName("Settings"); // NOI18N
        setResizable(false);
        setType(java.awt.Window.Type.POPUP);
        getContentPane().setLayout(new java.awt.GridLayout(0, 2));

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
